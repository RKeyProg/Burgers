/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'Gagalin';
  src: url("../dist/fonts/gagalin-regular-webfont.woff") format("woff"), url("../dist/fonts/gagalin-regular-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Lifehack';
  src: url("../dist/fonts/lifehack_medium-webfont.woff") format("woff"), url("../dist/fonts/lifehack_medium-webfont.woff2") format("woff2");
  font-weight: medium;
  font-style: normal; }

* {
  box-sizing: border-box; }

h1,
h2,
h3,
h4,
h5,
h6,
p,
button,
ul,
li,
input {
  padding: 0;
  margin: 0; }

html,
body {
  height: 100%;
  padding: 0;
  margin: 0; }

html {
  font-size: 14px; }
  @media screen and (max-width: 768px) {
    html {
      font-size: 13px; } }
  @media screen and (max-width: 480px) {
    html {
      font-size: 12px; } }

body {
  font-family: 'Ubuntu', sans-serif;
  font-weight: 500;
  font-size: 1rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #fff; }

.wrapper {
  overflow: hidden; }

.container {
  width: 95%;
  height: 100%;
  max-width: 940px;
  margin: 0 auto;
  position: relative;
  z-index: 5;
  display: flex;
  flex-direction: column;
  justify-content: center; }
  .container_jcontent_sb {
    justify-content: space-between; }

ul {
  list-style: none; }

img {
  width: 100%;
  height: 100%; }

a {
  text-decoration: none;
  color: inherit;
  transition: all .3s ease; }

button, input[type=reset] {
  background: transparent;
  border: 0;
  -webkit-tap-highlight-color: transparent; }
  button:focus, input[type=reset]:focus {
    outline: none; }
  button:hover, input[type=reset]:hover {
    cursor: pointer; }

.accordion {
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  display: flex; }

.accordion__btn {
  position: relative;
  width: 5.71429rem;
  height: 100%;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  padding-bottom: 2.14286rem; }
  .accordion__btn::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6); }
  .accordion__btn h3 {
    transform: rotate(-90deg) translateX(50%);
    font-family: Gagalin, sans-serif;
    font-size: 2.85714rem;
    color: #fff;
    text-transform: uppercase;
    white-space: nowrap; }

.btn {
  padding: 0.92857rem 1.07143rem;
  border-radius: 5px;
  font-size: 0.92857rem;
  text-transform: uppercase;
  color: #fff;
  align-self: center;
  line-height: 1em; }
  .btn_theme_red {
    background-color: #e45028; }
  .btn_theme_dark {
    background-color: #2f3234; }
  .btn_margine_right {
    margin-right: 1.42857rem; }

.controls__input {
  display: none; }
  .controls__input:checked ~ .controls__icon::after {
    display: block; }

.controls__icon {
  width: 1.07143rem;
  height: 1.07143rem;
  background-color: #fff;
  margin-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center; }
  .controls__icon_type_radio {
    border-radius: 50%; }
    .controls__icon_type_radio::after {
      content: '';
      display: none;
      width: 7px;
      height: 7px;
      border-radius: 50%;
      background-color: #e45028; }
  .controls__icon_type_check::after {
    content: '';
    display: none;
    width: 9px;
    height: 7px;
    background: url("./img/icons/checkmark.svg") center center/cover no-repeat; }

.controls__title {
  font-size: 1rem;
  font-weight: 300;
  line-height: 1.71; }

.dignities__list {
  display: flex;
  justify-content: space-between; }

.dignities__item {
  width: calc(100% / 3 - 2rem); }

.dignity {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center; }

.dignity__icon {
  width: 6.92857rem;
  height: 6.35714rem;
  margin-bottom: 2.35714rem; }

.dignity__icon-img {
  width: 100%;
  height: 100%; }
  .dignity__icon-img_fill_red {
    fill: #E35028; }
  .dignity__icon-img_fill_yellow {
    fill: #F9B43B; }
  .dignity__icon-img_fill_green {
    fill: #8BC03F; }

.dignity__content h4 {
  font-family: Lifehack, sans-serif;
  font-size: 1.71429rem;
  color: #2f3234;
  margin-bottom: 1.78571rem; }

.dignity__content p {
  font-size: 1rem;
  font-weight: 300;
  color: rgba(47, 50, 52, 0.8);
  line-height: 1.71em; }

.form {
  width: 100%;
  display: flex;
  justify-content: space-between; }

.form__column {
  width: calc(100%/2 - 10px);
  max-width: 32.85714rem; }

.form__row {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  margin-bottom: 1.35714rem; }
  .form__row:last-child {
    margin-bottom: 0; }
  .form__row_jcontent_fstart {
    justify-content: flex-start; }

.form__label {
  width: 100%; }
  .form__label_width_half {
    width: 15.78571rem; }
  .form__label_width_quarter {
    width: 7.14286rem; }

.form__controls {
  display: flex;
  align-items: center;
  margin: 0 1.14286rem 5px 0; }
  .form__controls:last-child {
    margin-right: 0; }

.form__btn-clear {
  display: inline-block;
  font-weight: 300;
  color: #fff; }

.header {
  display: flex;
  justify-content: space-between;
  align-items: center; }

.header__logo {
  display: block;
  width: 6.57143rem;
  height: 4.92857rem; }

.header__logo-img {
  width: 100%;
  height: 100%;
  --up-color: #E55028;
  --down-color: #F9B43B;
  --dot-color: #8BC334; }

.hero__content {
  display: flex;
  justify-content: space-around;
  align-items: flex-end;
  margin-bottom: 4.64286rem; }

.hero__preview {
  width: 32.21429rem;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  background: url("./img/icons/drops.svg") center center/contain no-repeat; }

.hero__arrow-scroll {
  width: 2.07143rem;
  height: 1.07143rem;
  fill: #fefefe; }

.hero__arrow-scroll-img {
  width: 100%;
  height: 100%; }

.hero__preview-img {
  width: 29.78571rem;
  height: auto; }

.hero__title {
  width: 30.35714rem;
  text-transform: uppercase;
  font-family: Gagalin, sans-serif;
  font-size: 5.14286rem;
  color: #f9b43b;
  line-height: 0.92em; }
  .hero__title_font_handwritten {
    text-transform: none;
    font-family: Lifehack, sans-serif;
    font-size: 4.64286rem;
    color: #fff;
    line-height: 1em; }

.hero__arrow-scroll {
  display: block;
  width: 2.07143rem;
  margin: 0 auto; }

.label__title {
  font-size: 1rem;
  font-weight: 300;
  margin-bottom: 7px; }

.label__input {
  height: 2.57143rem; }

.label__textarea {
  height: 8.14286rem;
  resize: none; }

.label__input, .label__textarea {
  width: 100%;
  font-weight: 300;
  line-height: 1.71;
  border-radius: 5px;
  border: solid 1px #d1cfcb;
  padding: 0.85714rem 1.5rem; }
  .label__input:focus, .label__textarea:focus {
    outline: none;
    border: solid 2px #f9b43b; }

.menu__list {
  display: flex;
  align-items: center; }

.menu__item {
  margin-right: 10px;
  display: flex;
  align-items: center;
  text-transform: uppercase;
  font-size: 0.92857rem; }
  .menu__item::after {
    content: '';
    display: block;
    background-color: #fff;
    border-radius: 50%;
    width: 5px;
    height: 5px;
    margin-left: 10px; }
  .menu__item:last-child {
    margin: 0; }
    .menu__item:last-child::after {
      display: none;
      margin: 0; }

.people-about__list {
  width: 100%;
  display: grid;
  grid-template: repeat(2, 50vh)/repeat(4, 1fr); }

.people-about__item {
  position: relative; }
  .people-about__item:hover .people-about__content {
    opacity: 1; }

.people-about__photo {
  width: 100%;
  height: 100%; }

.people-about__photo-img {
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: center center;
  object-position: center center; }
  .people-about__photo-img_position_right {
    -o-object-position: right center;
    object-position: right center; }

.people-about__content {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  padding: 1.42857rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  opacity: 0;
  transition: opacity .5s ease;
  background-color: rgba(0, 0, 0, 0.6); }
  .people-about__content div {
    font-family: Gagalin, sans-serif;
    font-size: 1rem;
    text-transform: uppercase;
    margin-bottom: 2.14286rem; }
  .people-about__content p {
    font-size: 0.92857rem;
    font-weight: 300;
    line-height: 1.71em;
    margin-bottom: 0.92857rem; }
  .people-about__content .btn {
    align-self: flex-start; }

.player__container {
  width: 47.14286rem;
  height: 28.92857rem;
  margin: 0 auto; }
  .player__container::before {
    content: '';
    display: block;
    background: url("./img/sheet7.webp") center center/cover no-repeat;
    position: absolute;
    left: 0;
    bottom: -50px;
    width: 9%;
    height: 27%; }
    @media screen and (max-width: 768px) {
      .player__container::before {
        bottom: 85px;
        width: 7%;
        height: 18%; } }
    @media screen and (max-width: 480px) {
      .player__container::before {
        bottom: -50px;
        width: 10%;
        height: 24%; } }
  .player__container::after {
    content: '';
    display: block;
    background: url("./img/sheet8.webp") center center/cover no-repeat;
    position: absolute;
    right: 35px;
    top: 45px;
    width: 10%;
    height: 13%; }
    @media screen and (max-width: 768px) {
      .player__container::after {
        right: 5px;
        top: 45px; } }
  @media screen and (max-width: 768px) {
    .player__container {
      width: 77.5vw;
      height: 53vmin; } }

.player__wrapper {
  width: 100%;
  height: 100%;
  position: relative; }

.player__elem {
  width: 100%;
  height: 100%; }

.player__splash {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0; }
  .player__splash::before {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background: url("./img/playerPreview.webp") center center/cover no-repeat; }
  .player__splash:hover {
    cursor: pointer; }
    .player__splash:hover .player__splash-play {
      opacity: 1; }

.player__splash-play {
  width: 5.85714rem;
  height: 8.42857rem;
  display: block;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  opacity: .9;
  fill: #fff;
  transition: all .3s ease; }
  @media screen and (max-width: 768px) {
    .player__splash-play {
      width: 5.21429rem;
      height: 7.57143rem; } }
  @media screen and (max-width: 480px) {
    .player__splash-play {
      width: 3.5rem;
      height: 5.07143rem; } }

.player__controls {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 2.5rem;
  background-color: #3e3e3e;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 1.78571rem; }
  @media screen and (max-width: 768px) {
    .player__controls {
      padding: 0 1.5rem; } }
  @media screen and (max-width: 480px) {
    .player__controls {
      padding: 0 0.85714rem; } }

.player__start {
  padding: 0;
  position: relative;
  background-color: transparent;
  border: none;
  width: 1.14286rem;
  height: 1.57143rem; }
  .player__start:hover {
    cursor: pointer; }
  .player__start:focus {
    outline: none; }
  @media screen and (max-width: 768px) {
    .player__start {
      width: 1rem;
      height: 1.42857rem; } }
  @media screen and (max-width: 480px) {
    .player__start {
      width: 0.71429rem;
      height: 0.92857rem; } }

.player__start-play {
  width: 100%;
  height: 100%;
  fill: #626262; }

.player__playback,
.player__volume {
  position: relative; }
  .player__playback::before,
  .player__volume::before {
    content: '';
    height: 4px;
    display: block;
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    transform: translateY(-50%);
    background-color: #626262; }
    @media screen and (max-width: 480px) {
      .player__playback::before,
      .player__volume::before {
        height: 3px; } }
  .player__playback:hover,
  .player__volume:hover {
    cursor: pointer; }

.player__playback-button,
.player__volume-button {
  position: absolute;
  top: 50%;
  padding: 0;
  background-color: transparent;
  border: none;
  border-radius: 50%;
  background-color: #626262;
  width: 0.92857rem;
  height: 0.92857rem;
  transform: translate(-50%, -50%); }
  .player__playback-button:hover,
  .player__volume-button:hover {
    cursor: pointer; }
  .player__playback-button:focus,
  .player__volume-button:focus {
    outline: none; }
  @media screen and (max-width: 768px) {
    .player__playback-button,
    .player__volume-button {
      width: 0.78571rem;
      height: 0.78571rem; } }
  @media screen and (max-width: 768px) {
    .player__playback-button,
    .player__volume-button {
      width: 0.57143rem;
      height: 0.57143rem; } }

.player__playback {
  width: 31.71429rem; }
  @media screen and (max-width: 768px) {
    .player__playback {
      width: 66.9%; } }

.player__playback-button {
  left: 0; }

.player__speaker {
  height: 1.57143rem;
  display: flex; }
  @media screen and (max-width: 768px) {
    .player__speaker {
      height: 1.42857rem; } }
  @media screen and (max-width: 480px) {
    .player__speaker {
      height: 0.92857rem; } }

.player__speaker-btn {
  padding: 0;
  height: 100%;
  background-color: transparent;
  border: none;
  margin-right: 1.35714rem; }
  .player__speaker-btn:hover {
    cursor: pointer; }
  .player__speaker-btn:focus {
    outline: none; }
  @media screen and (max-width: 768px) {
    .player__speaker-btn {
      margin-right: 1.14286rem; } }
  @media screen and (max-width: 768px) {
    .player__speaker-btn {
      margin-right: 0.78571rem; } }

.player__speaker-img {
  width: 1.28571rem;
  height: 100%;
  fill: #626262; }

.player__volume {
  width: 4.14286rem; }
  @media screen and (max-width: 768px) {
    .player__volume {
      width: 3.78571rem; } }
  @media screen and (max-width: 480px) {
    .player__volume {
      width: 2.57143rem; } }

.player__volume-button {
  left: 100%; }

.player {
  width: 100%;
  height: 100%;
  position: relative;
  display: block;
  background-color: #000; }
  .player button {
    line-height: 0; }
  .player.paused .player__start {
    border: none;
    border-radius: 0; }
    .player.paused .player__start::after, .player.paused .player__start::before {
      content: '';
      display: block;
      position: absolute;
      width: 35%;
      top: 0;
      bottom: 0;
      background: #626262; }
    .player.paused .player__start::after {
      right: 0; }
    .player.paused .player__start::before {
      left: 0; }
  .player.paused .player__start-play {
    fill: transparent; }
  .player.active .player__splash {
    display: none; }

.section {
  height: 100vh;
  padding: 8.07143rem 0;
  position: relative; }

.section__title {
  font-family: Gagalin, sans-serif;
  font-size: 5.14286rem;
  text-transform: uppercase;
  color: #2f3234;
  text-align: center;
  margin-bottom: 3.92857rem; }
  .section__title_color_orange {
    color: #f9b43b; }
  .section__title_color_white {
    color: #fff; }
  .section__title_text-align_left {
    text-align: left; }

.section__hero {
  position: relative;
  padding: 0.92857rem 0 2.85714rem;
  background: url("./img/heroBG.png") top center/cover no-repeat; }
  .section__hero::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.31); }

.section__about {
  background: url("./img/aboutBG.jpg") top center/cover no-repeat; }

.section__slider {
  background: linear-gradient(to bottom, #f9b43b 24%, #eb8c38 48%, #f9b43b 74%); }
  .section__slider .container {
    flex-direction: row;
    align-items: center; }

.section__team {
  position: relative;
  padding: 0;
  background: url("./img/teamBG.jpg") top center/cover no-repeat; }
  .section__team .container {
    width: 38.71429rem;
    padding: 6.92857rem;
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    background-color: rgba(47, 50, 52, 0.93); }

.section__menu {
  background: url("./img/accordionBG.jpg") top center/cover no-repeat; }
  .section__menu .container {
    position: static;
    height: auto; }

.section__people-about {
  padding: 0; }
  .section__people-about .container {
    width: 100%;
    height: 100%;
    max-width: 100%; }

.section__video {
  background: url("./img/videoBG.jpg") center center/cover no-repeat; }
  .section__video .section__title {
    margin-bottom: 3.57143rem; }

.section__form {
  background: url("./img/formBG.png") center center/cover no-repeat, url("./img/formMaskBG.jpg") center center/cover no-repeat; }

.slider__arrow {
  width: 1.92857rem;
  height: 1rem;
  z-index: 10;
  position: absolute; }
  .slider__arrow_prev {
    transform: rotate(90deg);
    left: -3.14286rem; }
  .slider__arrow_next {
    transform: rotate(-90deg);
    right: -3.14286rem; }

.slide {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative; }

.slide__kcal {
  position: absolute;
  bottom: -1.42857rem;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: center; }

.slide__kcal-icon {
  width: 4.28571rem;
  height: 4.28571rem;
  opacity: .5;
  margin-bottom: 5px; }

.slide__kcal-value {
  opacity: .5;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: Gagalin, sans-serif;
  font-size: 1.42857rem; }

.slide__kcal-text {
  opacity: .5;
  font-family: Gagalin, sans-serif;
  font-size: 1rem; }

.slide__photo {
  max-width: 35.71429rem;
  flex-shrink: 0; }

.slide__content {
  max-width: 33.57143rem; }
  .slide__content h2 {
    width: 32.14286rem;
    font-family: Gagalin, sans-serif;
    font-size: 5.14286rem;
    color: #fff;
    margin-bottom: 4rem; }
  .slide__content p {
    width: 32.14286rem;
    line-height: 1.71em;
    font-weight: 300;
    margin-bottom: 2.14286rem; }

.slide__order {
  display: flex; }
  .slide__order div {
    font-family: Gagalin, sans-serif;
    font-size: 5.14286rem;
    color: #e45028;
    margin-right: 2.07143rem; }
  .slide__order span {
    text-transform: uppercase;
    font-size: 2.14286rem; }
  .slide__order .btn {
    align-self: flex-end; }

.slide__struct {
  position: absolute;
  top: -2.14286rem;
  left: 0;
  display: flex; }

.struct__btn {
  width: 6.42857rem;
  height: 6.42857rem;
  border-radius: 5px;
  background-color: rgba(227, 80, 40, 0.4);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: background-color .3s ease; }
  .struct__btn:hover {
    cursor: pointer;
    background-color: #e35028; }
    .struct__btn:hover ~ .struct__list {
      opacity: 1;
      left: 6.42857rem; }

.struct__list {
  width: 19.28571rem;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 5px;
  padding: 1.28571rem 1.57143rem;
  color: #2f3234;
  position: absolute;
  left: -999999px;
  opacity: 0;
  transition: opacity .3s ease; }
  .struct__list:hover {
    opacity: 1;
    left: 6.42857rem; }

.struct__item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1.28571rem; }
  .struct__item:last-child {
    margin-bottom: 0; }

.struct__icon {
  width: 3.21429rem;
  max-height: 3.21429rem;
  margin-right: 1.78571rem; }

.struct__text {
  font-weight: 500;
  flex: 1; }

.struct__weight {
  font-weight: 300; }

.team__item {
  margin-bottom: 2.85714rem; }
  .team__item_active .teammate__name {
    color: #f9b43b; }
    .team__item_active .teammate__name::before {
      border-bottom: 7px solid #f9b43b;
      border-top: 0; }
  .team__item_active .teammate__wrapper {
    height: auto; }

.teammate__name {
  font-family: Gagalin, sans-serif;
  font-size: 1rem;
  text-transform: uppercase;
  display: flex;
  align-items: center;
  color: #fff; }
  .teammate__name::before {
    content: '';
    display: inline-block;
    border: 5px solid transparent;
    border-top: 7px solid #f9b43b;
    border-bottom: 0;
    margin-right: 10px; }

.teammate__wrapper {
  height: 0;
  overflow: hidden; }

.teammate__about {
  padding: 1.28571rem 0 0 1.42857rem;
  display: flex;
  align-items: center; }

.teammate__photo {
  width: 7.14286rem;
  height: 7.14286rem;
  border-radius: 50%;
  overflow: hidden;
  flex-shrink: 0;
  margin-right: 1.42857rem; }

.teammate__photo-img {
  -o-object-fit: cover;
  object-fit: cover; }

.teammate__desc {
  line-height: 1.71; }
  .teammate__desc div {
    font-weight: 700;
    margin-bottom: 1.07143rem; }
  .teammate__desc p {
    font-weight: 300; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vcm1hbGl6ZS5jc3MiLCJtYWluLmNzcyIsImxheW91dC9mb250cy5zY3NzIiwibGF5b3V0L2Jhc2Uuc2NzcyIsIm1haW4uc2NzcyIsIm1lZGlhL21lZGlhLnNjc3MiLCJibG9ja3MvYWNjb3JkaW9uLnNjc3MiLCJibG9ja3MvYnRuLnNjc3MiLCJibG9ja3MvY29udHJvbHMuc2NzcyIsImJsb2Nrcy9kaWduaXRpZXMuc2NzcyIsImJsb2Nrcy9mb3JtLnNjc3MiLCJibG9ja3MvaGVhZGVyLnNjc3MiLCJibG9ja3MvaGVyby5zY3NzIiwiYmxvY2tzL2xhYmVsLnNjc3MiLCJibG9ja3MvbWVudS5zY3NzIiwiYmxvY2tzL3Blb3BsZS1hYm91dC5zY3NzIiwiYmxvY2tzL3BsYXllci5zY3NzIiwiYmxvY2tzL3NlY3Rpb24uc2NzcyIsImJsb2Nrcy9zbGlkZXIuc2NzcyIsImJsb2Nrcy9zdHJ1Y3Quc2NzcyIsImJsb2Nrcy90ZWFtLWxpc3Quc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyRUFBQTtBQUVBOytFQ0ErRTtBREcvRTs7O0VDQ0U7QURJRjtFQUNBLGlCQUFBO0VBQUEsTUFBQTtFQUNBLDhCQUFBO0VBQUEsTUFBQSxFQUFBOztBQUdBOytFQ0QrRTtBREkvRTs7RUNERTtBREtGO0VBQ0EsU0FBQSxFQUFBOztBQUdBOztFQ0hFO0FET0Y7RUFDQSxjQUFBLEVBQUE7O0FBR0E7OztFQ0pFO0FEU0Y7RUFDQSxjQUFBO0VBQ0EsZ0JBQUEsRUFBQTs7QUFHQTsrRUNSK0U7QURXL0U7OztFQ1BFO0FEWUY7RUFDQSx1QkFBQTtFQUFBLE1BQUE7RUFDQSxTQUFBO0VBQUEsTUFBQTtFQUNBLGlCQUFBO0VBQUEsTUFBQSxFQUFBOztBQUdBOzs7RUNORTtBRFdGO0VBQ0EsaUNBQUE7RUFBQSxNQUFBO0VBQ0EsY0FBQTtFQUFBLE1BQUEsRUFBQTs7QUFHQTsrRUNSK0U7QURXL0U7O0VDUkU7QURZRjtFQUNBLDZCQUFBLEVBQUE7O0FBR0E7OztFQ1RFO0FE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bGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHYWdhbGluJztcbiAgc3JjOiB1cmwoXCIuLi9kaXN0L2ZvbnRzL2dhZ2FsaW4tcmVndWxhci13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZGlzdC9mb250cy9nYWdhbGluLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0xpZmVoYWNrJztcbiAgc3JjOiB1cmwoXCIuLi9kaXN0L2ZvbnRzL2xpZmVoYWNrX21lZGl1bS13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZGlzdC9mb250cy9saWZlaGFja19tZWRpdW0td2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IG1lZGl1bTtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG5idXR0b24sXG51bCxcbmxpLFxuaW5wdXQge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7IH1cblxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDEzcHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIGh0bWwge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgY29sb3I6ICNmZmY7IH1cblxuLndyYXBwZXIge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogOTUlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1heC13aWR0aDogOTQwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5jb250YWluZXJfamNvbnRlbnRfc2Ige1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlOyB9XG5cbmJ1dHRvbiwgaW5wdXRbdHlwZT1yZXNldF0ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIGJ1dHRvbjpmb2N1cywgaW5wdXRbdHlwZT1yZXNldF06Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgYnV0dG9uOmhvdmVyLCBpbnB1dFt0eXBlPXJlc2V0XTpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5hY2NvcmRpb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uYWNjb3JkaW9uX19idG4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA1LjcxNDI5cmVtO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIHBhZGRpbmctYm90dG9tOiAyLjE0Mjg2cmVtOyB9XG4gIC5hY2NvcmRpb25fX2J0bjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTsgfVxuICAuYWNjb3JkaW9uX19idG4gaDMge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZykgdHJhbnNsYXRlWCg1MCUpO1xuICAgIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMi44NTcxNHJlbTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cblxuLmJ0biB7XG4gIHBhZGRpbmc6IDAuOTI4NTdyZW0gMS4wNzE0M3JlbTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBmb250LXNpemU6IDAuOTI4NTdyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxZW07IH1cbiAgLmJ0bl90aGVtZV9yZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNDUwMjg7IH1cbiAgLmJ0bl90aGVtZV9kYXJrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzMjM0OyB9XG4gIC5idG5fbWFyZ2luZV9yaWdodCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjQyODU3cmVtOyB9XG5cbi5jb250cm9sc19faW5wdXQge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIC5jb250cm9sc19faW5wdXQ6Y2hlY2tlZCB+IC5jb250cm9sc19faWNvbjo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5jb250cm9sc19faWNvbiB7XG4gIHdpZHRoOiAxLjA3MTQzcmVtO1xuICBoZWlnaHQ6IDEuMDcxNDNyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmNvbnRyb2xzX19pY29uX3R5cGVfcmFkaW8ge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuICAgIC5jb250cm9sc19faWNvbl90eXBlX3JhZGlvOjphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB3aWR0aDogN3B4O1xuICAgICAgaGVpZ2h0OiA3cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTQ1MDI4OyB9XG4gIC5jb250cm9sc19faWNvbl90eXBlX2NoZWNrOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB3aWR0aDogOXB4O1xuICAgIGhlaWdodDogN3B4O1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL2ljb25zL2NoZWNrbWFyay5zdmdcIikgY2VudGVyIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7IH1cblxuLmNvbnRyb2xzX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNzE7IH1cblxuLmRpZ25pdGllc19fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4uZGlnbml0aWVzX19pdGVtIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAvIDMgLSAycmVtKTsgfVxuXG4uZGlnbml0eSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uZGlnbml0eV9faWNvbiB7XG4gIHdpZHRoOiA2LjkyODU3cmVtO1xuICBoZWlnaHQ6IDYuMzU3MTRyZW07XG4gIG1hcmdpbi1ib3R0b206IDIuMzU3MTRyZW07IH1cblxuLmRpZ25pdHlfX2ljb24taW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuICAuZGlnbml0eV9faWNvbi1pbWdfZmlsbF9yZWQge1xuICAgIGZpbGw6ICNFMzUwMjg7IH1cbiAgLmRpZ25pdHlfX2ljb24taW1nX2ZpbGxfeWVsbG93IHtcbiAgICBmaWxsOiAjRjlCNDNCOyB9XG4gIC5kaWduaXR5X19pY29uLWltZ19maWxsX2dyZWVuIHtcbiAgICBmaWxsOiAjOEJDMDNGOyB9XG5cbi5kaWduaXR5X19jb250ZW50IGg0IHtcbiAgZm9udC1mYW1pbHk6IExpZmVoYWNrLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuNzE0MjlyZW07XG4gIGNvbG9yOiAjMmYzMjM0O1xuICBtYXJnaW4tYm90dG9tOiAxLjc4NTcxcmVtOyB9XG5cbi5kaWduaXR5X19jb250ZW50IHAge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGNvbG9yOiByZ2JhKDQ3LCA1MCwgNTIsIDAuOCk7XG4gIGxpbmUtaGVpZ2h0OiAxLjcxZW07IH1cblxuLmZvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG5cbi5mb3JtX19jb2x1bW4ge1xuICB3aWR0aDogY2FsYygxMDAlLzIgLSAxMHB4KTtcbiAgbWF4LXdpZHRoOiAzMi44NTcxNHJlbTsgfVxuXG4uZm9ybV9fcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1ib3R0b206IDEuMzU3MTRyZW07IH1cbiAgLmZvcm1fX3JvdzpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIC5mb3JtX19yb3dfamNvbnRlbnRfZnN0YXJ0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cblxuLmZvcm1fX2xhYmVsIHtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmZvcm1fX2xhYmVsX3dpZHRoX2hhbGYge1xuICAgIHdpZHRoOiAxNS43ODU3MXJlbTsgfVxuICAuZm9ybV9fbGFiZWxfd2lkdGhfcXVhcnRlciB7XG4gICAgd2lkdGg6IDcuMTQyODZyZW07IH1cblxuLmZvcm1fX2NvbnRyb2xzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDEuMTQyODZyZW0gNXB4IDA7IH1cbiAgLmZvcm1fX2NvbnRyb2xzOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1yaWdodDogMDsgfVxuXG4uZm9ybV9fYnRuLWNsZWFyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXdlaWdodDogMzAwO1xuICBjb2xvcjogI2ZmZjsgfVxuXG4uaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5oZWFkZXJfX2xvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDYuNTcxNDNyZW07XG4gIGhlaWdodDogNC45Mjg1N3JlbTsgfVxuXG4uaGVhZGVyX19sb2dvLWltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC0tdXAtY29sb3I6ICNFNTUwMjg7XG4gIC0tZG93bi1jb2xvcjogI0Y5QjQzQjtcbiAgLS1kb3QtY29sb3I6ICM4QkMzMzQ7IH1cblxuLmhlcm9fX2NvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBtYXJnaW4tYm90dG9tOiA0LjY0Mjg2cmVtOyB9XG5cbi5oZXJvX19wcmV2aWV3IHtcbiAgd2lkdGg6IDMyLjIxNDI5cmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL2ljb25zL2Ryb3BzLnN2Z1wiKSBjZW50ZXIgY2VudGVyL2NvbnRhaW4gbm8tcmVwZWF0OyB9XG5cbi5oZXJvX19hcnJvdy1zY3JvbGwge1xuICB3aWR0aDogMi4wNzE0M3JlbTtcbiAgaGVpZ2h0OiAxLjA3MTQzcmVtO1xuICBmaWxsOiAjZmVmZWZlOyB9XG5cbi5oZXJvX19hcnJvdy1zY3JvbGwtaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4uaGVyb19fcHJldmlldy1pbWcge1xuICB3aWR0aDogMjkuNzg1NzFyZW07XG4gIGhlaWdodDogYXV0bzsgfVxuXG4uaGVyb19fdGl0bGUge1xuICB3aWR0aDogMzAuMzU3MTRyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDUuMTQyODZyZW07XG4gIGNvbG9yOiAjZjliNDNiO1xuICBsaW5lLWhlaWdodDogMC45MmVtOyB9XG4gIC5oZXJvX190aXRsZV9mb250X2hhbmR3cml0dGVuIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBmb250LWZhbWlseTogTGlmZWhhY2ssIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiA0LjY0Mjg2cmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGxpbmUtaGVpZ2h0OiAxZW07IH1cblxuLmhlcm9fX2Fycm93LXNjcm9sbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMi4wNzE0M3JlbTtcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuLmxhYmVsX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbWFyZ2luLWJvdHRvbTogN3B4OyB9XG5cbi5sYWJlbF9faW5wdXQge1xuICBoZWlnaHQ6IDIuNTcxNDNyZW07IH1cblxuLmxhYmVsX190ZXh0YXJlYSB7XG4gIGhlaWdodDogOC4xNDI4NnJlbTtcbiAgcmVzaXplOiBub25lOyB9XG5cbi5sYWJlbF9faW5wdXQsIC5sYWJlbF9fdGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNzE7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiBzb2xpZCAxcHggI2QxY2ZjYjtcbiAgcGFkZGluZzogMC44NTcxNHJlbSAxLjVyZW07IH1cbiAgLmxhYmVsX19pbnB1dDpmb2N1cywgLmxhYmVsX190ZXh0YXJlYTpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXI6IHNvbGlkIDJweCAjZjliNDNiOyB9XG5cbi5tZW51X19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4ubWVudV9faXRlbSB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAwLjkyODU3cmVtOyB9XG4gIC5tZW51X19pdGVtOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDVweDtcbiAgICBoZWlnaHQ6IDVweDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAubWVudV9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDA7IH1cbiAgICAubWVudV9faXRlbTpsYXN0LWNoaWxkOjphZnRlciB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5wZW9wbGUtYWJvdXRfX2xpc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZTogcmVwZWF0KDIsIDUwdmgpL3JlcGVhdCg0LCAxZnIpOyB9XG5cbi5wZW9wbGUtYWJvdXRfX2l0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnBlb3BsZS1hYm91dF9faXRlbTpob3ZlciAucGVvcGxlLWFib3V0X19jb250ZW50IHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5wZW9wbGUtYWJvdXRfX3Bob3RvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4ucGVvcGxlLWFib3V0X19waG90by1pbWcge1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOyB9XG4gIC5wZW9wbGUtYWJvdXRfX3Bob3RvLWltZ19wb3NpdGlvbl9yaWdodCB7XG4gICAgb2JqZWN0LXBvc2l0aW9uOiByaWdodCBjZW50ZXI7IH1cblxuLnBlb3BsZS1hYm91dF9fY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHBhZGRpbmc6IDEuNDI4NTdyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC41cyBlYXNlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7IH1cbiAgLnBlb3BsZS1hYm91dF9fY29udGVudCBkaXYge1xuICAgIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIG1hcmdpbi1ib3R0b206IDIuMTQyODZyZW07IH1cbiAgLnBlb3BsZS1hYm91dF9fY29udGVudCBwIHtcbiAgICBmb250LXNpemU6IDAuOTI4NTdyZW07XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBsaW5lLWhlaWdodDogMS43MWVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuOTI4NTdyZW07IH1cbiAgLnBlb3BsZS1hYm91dF9fY29udGVudCAuYnRuIHtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0OyB9XG5cbi5wbGF5ZXJfX2NvbnRhaW5lciB7XG4gIHdpZHRoOiA0Ny4xNDI4NnJlbTtcbiAgaGVpZ2h0OiAyOC45Mjg1N3JlbTtcbiAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLnBsYXllcl9fY29udGFpbmVyOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL3NoZWV0Ny53ZWJwXCIpIGNlbnRlciBjZW50ZXIvY292ZXIgbm8tcmVwZWF0O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogLTUwcHg7XG4gICAgd2lkdGg6IDklO1xuICAgIGhlaWdodDogMjclOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5wbGF5ZXJfX2NvbnRhaW5lcjo6YmVmb3JlIHtcbiAgICAgICAgYm90dG9tOiA4NXB4O1xuICAgICAgICB3aWR0aDogNyU7XG4gICAgICAgIGhlaWdodDogMTglOyB9IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgLnBsYXllcl9fY29udGFpbmVyOjpiZWZvcmUge1xuICAgICAgICBib3R0b206IC01MHB4O1xuICAgICAgICB3aWR0aDogMTAlO1xuICAgICAgICBoZWlnaHQ6IDI0JTsgfSB9XG4gIC5wbGF5ZXJfX2NvbnRhaW5lcjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL3NoZWV0OC53ZWJwXCIpIGNlbnRlciBjZW50ZXIvY292ZXIgbm8tcmVwZWF0O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMzVweDtcbiAgICB0b3A6IDQ1cHg7XG4gICAgd2lkdGg6IDEwJTtcbiAgICBoZWlnaHQ6IDEzJTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAucGxheWVyX19jb250YWluZXI6OmFmdGVyIHtcbiAgICAgICAgcmlnaHQ6IDVweDtcbiAgICAgICAgdG9wOiA0NXB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAucGxheWVyX19jb250YWluZXIge1xuICAgICAgd2lkdGg6IDc3LjV2dztcbiAgICAgIGhlaWdodDogNTN2bWluOyB9IH1cblxuLnBsYXllcl9fd3JhcHBlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ucGxheWVyX19lbGVtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4ucGxheWVyX19zcGxhc2gge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDsgfVxuICAucGxheWVyX19zcGxhc2g6OmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL3BsYXllclByZXZpZXcud2VicFwiKSBjZW50ZXIgY2VudGVyL2NvdmVyIG5vLXJlcGVhdDsgfVxuICAucGxheWVyX19zcGxhc2g6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5wbGF5ZXJfX3NwbGFzaDpob3ZlciAucGxheWVyX19zcGxhc2gtcGxheSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG5cbi5wbGF5ZXJfX3NwbGFzaC1wbGF5IHtcbiAgd2lkdGg6IDUuODU3MTRyZW07XG4gIGhlaWdodDogOC40Mjg1N3JlbTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIG9wYWNpdHk6IC45O1xuICBmaWxsOiAjZmZmO1xuICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAucGxheWVyX19zcGxhc2gtcGxheSB7XG4gICAgICB3aWR0aDogNS4yMTQyOXJlbTtcbiAgICAgIGhlaWdodDogNy41NzE0M3JlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLnBsYXllcl9fc3BsYXNoLXBsYXkge1xuICAgICAgd2lkdGg6IDMuNXJlbTtcbiAgICAgIGhlaWdodDogNS4wNzE0M3JlbTsgfSB9XG5cbi5wbGF5ZXJfX2NvbnRyb2xzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDIuNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNlM2UzZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAwIDEuNzg1NzFyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAucGxheWVyX19jb250cm9scyB7XG4gICAgICBwYWRkaW5nOiAwIDEuNXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLnBsYXllcl9fY29udHJvbHMge1xuICAgICAgcGFkZGluZzogMCAwLjg1NzE0cmVtOyB9IH1cblxuLnBsYXllcl9fc3RhcnQge1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiAxLjE0Mjg2cmVtO1xuICBoZWlnaHQ6IDEuNTcxNDNyZW07IH1cbiAgLnBsYXllcl9fc3RhcnQ6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAucGxheWVyX19zdGFydDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5wbGF5ZXJfX3N0YXJ0IHtcbiAgICAgIHdpZHRoOiAxcmVtO1xuICAgICAgaGVpZ2h0OiAxLjQyODU3cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAucGxheWVyX19zdGFydCB7XG4gICAgICB3aWR0aDogMC43MTQyOXJlbTtcbiAgICAgIGhlaWdodDogMC45Mjg1N3JlbTsgfSB9XG5cbi5wbGF5ZXJfX3N0YXJ0LXBsYXkge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmaWxsOiAjNjI2MjYyOyB9XG5cbi5wbGF5ZXJfX3BsYXliYWNrLFxuLnBsYXllcl9fdm9sdW1lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5wbGF5ZXJfX3BsYXliYWNrOjpiZWZvcmUsXG4gIC5wbGF5ZXJfX3ZvbHVtZTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBoZWlnaHQ6IDRweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzYyNjI2MjsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAucGxheWVyX19wbGF5YmFjazo6YmVmb3JlLFxuICAgICAgLnBsYXllcl9fdm9sdW1lOjpiZWZvcmUge1xuICAgICAgICBoZWlnaHQ6IDNweDsgfSB9XG4gIC5wbGF5ZXJfX3BsYXliYWNrOmhvdmVyLFxuICAucGxheWVyX192b2x1bWU6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4ucGxheWVyX19wbGF5YmFjay1idXR0b24sXG4ucGxheWVyX192b2x1bWUtYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgcGFkZGluZzogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjI2MjYyO1xuICB3aWR0aDogMC45Mjg1N3JlbTtcbiAgaGVpZ2h0OiAwLjkyODU3cmVtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuICAucGxheWVyX19wbGF5YmFjay1idXR0b246aG92ZXIsXG4gIC5wbGF5ZXJfX3ZvbHVtZS1idXR0b246aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAucGxheWVyX19wbGF5YmFjay1idXR0b246Zm9jdXMsXG4gIC5wbGF5ZXJfX3ZvbHVtZS1idXR0b246Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAucGxheWVyX19wbGF5YmFjay1idXR0b24sXG4gICAgLnBsYXllcl9fdm9sdW1lLWJ1dHRvbiB7XG4gICAgICB3aWR0aDogMC43ODU3MXJlbTtcbiAgICAgIGhlaWdodDogMC43ODU3MXJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnBsYXllcl9fcGxheWJhY2stYnV0dG9uLFxuICAgIC5wbGF5ZXJfX3ZvbHVtZS1idXR0b24ge1xuICAgICAgd2lkdGg6IDAuNTcxNDNyZW07XG4gICAgICBoZWlnaHQ6IDAuNTcxNDNyZW07IH0gfVxuXG4ucGxheWVyX19wbGF5YmFjayB7XG4gIHdpZHRoOiAzMS43MTQyOXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5wbGF5ZXJfX3BsYXliYWNrIHtcbiAgICAgIHdpZHRoOiA2Ni45JTsgfSB9XG5cbi5wbGF5ZXJfX3BsYXliYWNrLWJ1dHRvbiB7XG4gIGxlZnQ6IDA7IH1cblxuLnBsYXllcl9fc3BlYWtlciB7XG4gIGhlaWdodDogMS41NzE0M3JlbTtcbiAgZGlzcGxheTogZmxleDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5wbGF5ZXJfX3NwZWFrZXIge1xuICAgICAgaGVpZ2h0OiAxLjQyODU3cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAucGxheWVyX19zcGVha2VyIHtcbiAgICAgIGhlaWdodDogMC45Mjg1N3JlbTsgfSB9XG5cbi5wbGF5ZXJfX3NwZWFrZXItYnRuIHtcbiAgcGFkZGluZzogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW4tcmlnaHQ6IDEuMzU3MTRyZW07IH1cbiAgLnBsYXllcl9fc3BlYWtlci1idG46aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAucGxheWVyX19zcGVha2VyLWJ0bjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5wbGF5ZXJfX3NwZWFrZXItYnRuIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMS4xNDI4NnJlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnBsYXllcl9fc3BlYWtlci1idG4ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjc4NTcxcmVtOyB9IH1cblxuLnBsYXllcl9fc3BlYWtlci1pbWcge1xuICB3aWR0aDogMS4yODU3MXJlbTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmaWxsOiAjNjI2MjYyOyB9XG5cbi5wbGF5ZXJfX3ZvbHVtZSB7XG4gIHdpZHRoOiA0LjE0Mjg2cmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnBsYXllcl9fdm9sdW1lIHtcbiAgICAgIHdpZHRoOiAzLjc4NTcxcmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAucGxheWVyX192b2x1bWUge1xuICAgICAgd2lkdGg6IDIuNTcxNDNyZW07IH0gfVxuXG4ucGxheWVyX192b2x1bWUtYnV0dG9uIHtcbiAgbGVmdDogMTAwJTsgfVxuXG4ucGxheWVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgfVxuICAucGxheWVyIGJ1dHRvbiB7XG4gICAgbGluZS1oZWlnaHQ6IDA7IH1cbiAgLnBsYXllci5wYXVzZWQgLnBsYXllcl9fc3RhcnQge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAwOyB9XG4gICAgLnBsYXllci5wYXVzZWQgLnBsYXllcl9fc3RhcnQ6OmFmdGVyLCAucGxheWVyLnBhdXNlZCAucGxheWVyX19zdGFydDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMzUlO1xuICAgICAgdG9wOiAwO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgYmFja2dyb3VuZDogIzYyNjI2MjsgfVxuICAgIC5wbGF5ZXIucGF1c2VkIC5wbGF5ZXJfX3N0YXJ0OjphZnRlciB7XG4gICAgICByaWdodDogMDsgfVxuICAgIC5wbGF5ZXIucGF1c2VkIC5wbGF5ZXJfX3N0YXJ0OjpiZWZvcmUge1xuICAgICAgbGVmdDogMDsgfVxuICAucGxheWVyLnBhdXNlZCAucGxheWVyX19zdGFydC1wbGF5IHtcbiAgICBmaWxsOiB0cmFuc3BhcmVudDsgfVxuICAucGxheWVyLmFjdGl2ZSAucGxheWVyX19zcGxhc2gge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLnNlY3Rpb24ge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwYWRkaW5nOiA4LjA3MTQzcmVtIDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uc2VjdGlvbl9fdGl0bGUge1xuICBmb250LWZhbWlseTogR2FnYWxpbiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiA1LjE0Mjg2cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzJmMzIzNDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAzLjkyODU3cmVtOyB9XG4gIC5zZWN0aW9uX190aXRsZV9jb2xvcl9vcmFuZ2Uge1xuICAgIGNvbG9yOiAjZjliNDNiOyB9XG4gIC5zZWN0aW9uX190aXRsZV9jb2xvcl93aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgLnNlY3Rpb25fX3RpdGxlX3RleHQtYWxpZ25fbGVmdCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4uc2VjdGlvbl9faGVybyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMC45Mjg1N3JlbSAwIDIuODU3MTRyZW07XG4gIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL2hlcm9CRy5wbmdcIikgdG9wIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7IH1cbiAgLnNlY3Rpb25fX2hlcm86OmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzEpOyB9XG5cbi5zZWN0aW9uX19hYm91dCB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4vaW1nL2Fib3V0QkcuanBnXCIpIHRvcCBjZW50ZXIvY292ZXIgbm8tcmVwZWF0OyB9XG5cbi5zZWN0aW9uX19zbGlkZXIge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZjliNDNiIDI0JSwgI2ViOGMzOCA0OCUsICNmOWI0M2IgNzQlKTsgfVxuICAuc2VjdGlvbl9fc2xpZGVyIC5jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uc2VjdGlvbl9fdGVhbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMDtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi9pbWcvdGVhbUJHLmpwZ1wiKSB0b3AgY2VudGVyL2NvdmVyIG5vLXJlcGVhdDsgfVxuICAuc2VjdGlvbl9fdGVhbSAuY29udGFpbmVyIHtcbiAgICB3aWR0aDogMzguNzE0MjlyZW07XG4gICAgcGFkZGluZzogNi45Mjg1N3JlbTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ3LCA1MCwgNTIsIDAuOTMpOyB9XG5cbi5zZWN0aW9uX19tZW51IHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi9pbWcvYWNjb3JkaW9uQkcuanBnXCIpIHRvcCBjZW50ZXIvY292ZXIgbm8tcmVwZWF0OyB9XG4gIC5zZWN0aW9uX19tZW51IC5jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgaGVpZ2h0OiBhdXRvOyB9XG5cbi5zZWN0aW9uX19wZW9wbGUtYWJvdXQge1xuICBwYWRkaW5nOiAwOyB9XG4gIC5zZWN0aW9uX19wZW9wbGUtYWJvdXQgLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTsgfVxuXG4uc2VjdGlvbl9fdmlkZW8ge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuL2ltZy92aWRlb0JHLmpwZ1wiKSBjZW50ZXIgY2VudGVyL2NvdmVyIG5vLXJlcGVhdDsgfVxuICAuc2VjdGlvbl9fdmlkZW8gLnNlY3Rpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzLjU3MTQzcmVtOyB9XG5cbi5zZWN0aW9uX19mb3JtIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi9pbWcvZm9ybUJHLnBuZ1wiKSBjZW50ZXIgY2VudGVyL2NvdmVyIG5vLXJlcGVhdCwgdXJsKFwiLi9pbWcvZm9ybU1hc2tCRy5qcGdcIikgY2VudGVyIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7IH1cblxuLnNsaWRlcl9fYXJyb3cge1xuICB3aWR0aDogMS45Mjg1N3JlbTtcbiAgaGVpZ2h0OiAxcmVtO1xuICB6LWluZGV4OiAxMDtcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gIC5zbGlkZXJfX2Fycm93X3ByZXYge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICBsZWZ0OiAtMy4xNDI4NnJlbTsgfVxuICAuc2xpZGVyX19hcnJvd19uZXh0IHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICAgIHJpZ2h0OiAtMy4xNDI4NnJlbTsgfVxuXG4uc2xpZGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uc2xpZGVfX2tjYWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTEuNDI4NTdyZW07XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnNsaWRlX19rY2FsLWljb24ge1xuICB3aWR0aDogNC4yODU3MXJlbTtcbiAgaGVpZ2h0OiA0LjI4NTcxcmVtO1xuICBvcGFjaXR5OiAuNTtcbiAgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG5cbi5zbGlkZV9fa2NhbC12YWx1ZSB7XG4gIG9wYWNpdHk6IC41O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBmb250LWZhbWlseTogR2FnYWxpbiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjQyODU3cmVtOyB9XG5cbi5zbGlkZV9fa2NhbC10ZXh0IHtcbiAgb3BhY2l0eTogLjU7XG4gIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFyZW07IH1cblxuLnNsaWRlX19waG90byB7XG4gIG1heC13aWR0aDogMzUuNzE0MjlyZW07XG4gIGZsZXgtc2hyaW5rOiAwOyB9XG5cbi5zbGlkZV9fY29udGVudCB7XG4gIG1heC13aWR0aDogMzMuNTcxNDNyZW07IH1cbiAgLnNsaWRlX19jb250ZW50IGgyIHtcbiAgICB3aWR0aDogMzIuMTQyODZyZW07XG4gICAgZm9udC1mYW1pbHk6IEdhZ2FsaW4sIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiA1LjE0Mjg2cmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIG1hcmdpbi1ib3R0b206IDRyZW07IH1cbiAgLnNsaWRlX19jb250ZW50IHAge1xuICAgIHdpZHRoOiAzMi4xNDI4NnJlbTtcbiAgICBsaW5lLWhlaWdodDogMS43MWVtO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMi4xNDI4NnJlbTsgfVxuXG4uc2xpZGVfX29yZGVyIHtcbiAgZGlzcGxheTogZmxleDsgfVxuICAuc2xpZGVfX29yZGVyIGRpdiB7XG4gICAgZm9udC1mYW1pbHk6IEdhZ2FsaW4sIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiA1LjE0Mjg2cmVtO1xuICAgIGNvbG9yOiAjZTQ1MDI4O1xuICAgIG1hcmdpbi1yaWdodDogMi4wNzE0M3JlbTsgfVxuICAuc2xpZGVfX29yZGVyIHNwYW4ge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAyLjE0Mjg2cmVtOyB9XG4gIC5zbGlkZV9fb3JkZXIgLmJ0biB7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IH1cblxuLnNsaWRlX19zdHJ1Y3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTIuMTQyODZyZW07XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuLnN0cnVjdF9fYnRuIHtcbiAgd2lkdGg6IDYuNDI4NTdyZW07XG4gIGhlaWdodDogNi40Mjg1N3JlbTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyNywgODAsIDQwLCAwLjQpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3MgZWFzZTsgfVxuICAuc3RydWN0X19idG46aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTM1MDI4OyB9XG4gICAgLnN0cnVjdF9fYnRuOmhvdmVyIH4gLnN0cnVjdF9fbGlzdCB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgbGVmdDogNi40Mjg1N3JlbTsgfVxuXG4uc3RydWN0X19saXN0IHtcbiAgd2lkdGg6IDE5LjI4NTcxcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZzogMS4yODU3MXJlbSAxLjU3MTQzcmVtO1xuICBjb2xvcjogIzJmMzIzNDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtOTk5OTk5cHg7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2U7IH1cbiAgLnN0cnVjdF9fbGlzdDpob3ZlciB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBsZWZ0OiA2LjQyODU3cmVtOyB9XG5cbi5zdHJ1Y3RfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbi1ib3R0b206IDEuMjg1NzFyZW07IH1cbiAgLnN0cnVjdF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5zdHJ1Y3RfX2ljb24ge1xuICB3aWR0aDogMy4yMTQyOXJlbTtcbiAgbWF4LWhlaWdodDogMy4yMTQyOXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAxLjc4NTcxcmVtOyB9XG5cbi5zdHJ1Y3RfX3RleHQge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmbGV4OiAxOyB9XG5cbi5zdHJ1Y3RfX3dlaWdodCB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7IH1cblxuLnRlYW1fX2l0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAyLjg1NzE0cmVtOyB9XG4gIC50ZWFtX19pdGVtX2FjdGl2ZSAudGVhbW1hdGVfX25hbWUge1xuICAgIGNvbG9yOiAjZjliNDNiOyB9XG4gICAgLnRlYW1fX2l0ZW1fYWN0aXZlIC50ZWFtbWF0ZV9fbmFtZTo6YmVmb3JlIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDdweCBzb2xpZCAjZjliNDNiO1xuICAgICAgYm9yZGVyLXRvcDogMDsgfVxuICAudGVhbV9faXRlbV9hY3RpdmUgLnRlYW1tYXRlX193cmFwcGVyIHtcbiAgICBoZWlnaHQ6IGF1dG87IH1cblxuLnRlYW1tYXRlX19uYW1lIHtcbiAgZm9udC1mYW1pbHk6IEdhZ2FsaW4sIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICNmZmY7IH1cbiAgLnRlYW1tYXRlX19uYW1lOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBib3JkZXI6IDVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItdG9wOiA3cHggc29saWQgI2Y5YjQzYjtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDsgfVxuXG4udGVhbW1hdGVfX3dyYXBwZXIge1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLnRlYW1tYXRlX19hYm91dCB7XG4gIHBhZGRpbmc6IDEuMjg1NzFyZW0gMCAwIDEuNDI4NTdyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnRlYW1tYXRlX19waG90byB7XG4gIHdpZHRoOiA3LjE0Mjg2cmVtO1xuICBoZWlnaHQ6IDcuMTQyODZyZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZmxleC1zaHJpbms6IDA7XG4gIG1hcmdpbi1yaWdodDogMS40Mjg1N3JlbTsgfVxuXG4udGVhbW1hdGVfX3Bob3RvLWltZyB7XG4gIG9iamVjdC1maXQ6IGNvdmVyOyB9XG5cbi50ZWFtbWF0ZV9fZGVzYyB7XG4gIGxpbmUtaGVpZ2h0OiAxLjcxOyB9XG4gIC50ZWFtbWF0ZV9fZGVzYyBkaXYge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4wNzE0M3JlbTsgfVxuICAudGVhbW1hdGVfX2Rlc2MgcCB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDsgfVxuIiwiQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ0dhZ2FsaW4nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2Rpc3QvZm9udHMvZ2FnYWxpbi1yZWd1bGFyLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4gICAgICAgIHVybCgnLi4vZGlzdC9mb250cy9nYWdhbGluLXJlZ3VsYXItd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdMaWZlaGFjayc7XHJcbiAgICBzcmM6IHVybCgnLi4vZGlzdC9mb250cy9saWZlaGFja19tZWRpdW0td2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgICAgdXJsKCcuLi9kaXN0L2ZvbnRzL2xpZmVoYWNrX21lZGl1bS13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG1lZGl1bTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufSIsIioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxuaDYsXHJcbnAsXHJcbmJ1dHRvbixcclxudWwsXHJcbmxpLFxyXG5pbnB1dCB7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmh0bWwsXHJcbmJvZHkge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XHJcblxyXG4gIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUgLSAxcHg7XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBwaG9uZXMge1xyXG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUgLSAycHg7XHJcbiAgfVxyXG59XHJcblxyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICBmb250LXNpemU6IHJlbSgkYmFzZS1mb250LXNpemUpO1xyXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xyXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICB3aWR0aDogOTUlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtYXgtd2lkdGg6ICRjb250YWluZXItd2lkdGg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHotaW5kZXg6ICR6LWNvbnRhaW5lcjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICZfamNvbnRlbnRfc2Ige1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIH1cclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbiAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xyXG59XHJcblxyXG5idXR0b24sIGlucHV0W3R5cGU9cmVzZXRdIHtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXI6IDA7XHJcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDsgLy/QsdC10Lcg0YHQuNC90LXQs9C+INGE0L7QvdCwINC/0YDQuCDQvdCw0LbQsNGC0LjQuFxyXG5cclxuICAmOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbn0iLCIvLyBmdW5jdGlvbnNcclxuXHJcbkBmdW5jdGlvbiByZW0oJHB4KXtcclxuICAgIEByZXR1cm4gJHB4IC8gJGJhc2UtZm9udC1zaXplICsgMHJlbTtcclxufVxyXG5cclxuLy8gcGVyZW1cclxuXHJcbiRjb250YWluZXItd2lkdGg6IDk0MHB4O1xyXG4kYmFzZS1mb250LXNpemU6IDE0cHg7XHJcbiR0YWJsZXRzOiA3NjhweDtcclxuJHBob25lczogNDgwcHg7XHJcblxyXG4vLyB6LWluZGV4XHJcblxyXG4kei1jb250YWluZXI6IDU7XHJcbiR6LXBzZXZkb0VsOiAyO1xyXG4kei1jb250cm9sQXJyb3dzOiAxMDtcclxuXHJcbi8vIGNvbG9yc1xyXG5cclxuJG9yYW5nZTogI2Y5YjQzYjtcclxuJGRhcmtUaXRsZTogIzJmMzIzNDtcclxuJGJ0bk9yYW5nZTogI2U0NTAyODtcclxuXHJcbi8vIGltcG9ydHNcclxuXHJcbkBpbXBvcnQgXCJtZWRpYS9tZWRpYS5zY3NzXCI7XHJcblxyXG5AaW1wb3J0IFwiLi9sYXlvdXQvZm9udHMuc2Nzc1wiO1xyXG5cclxuQGltcG9ydCBcIi4vbGF5b3V0L2Jhc2Uuc2Nzc1wiO1xyXG5cclxuQGltcG9ydCBcIi4vYmxvY2tzLyouc2Nzc1wiOyIsIkBtaXhpbiB0YWJsZXRzIHtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICR0YWJsZXRzKSB7XHJcbiAgICAgICBAY29udGVudDsgICAgICAgICBcclxuICAgIH0gICAgXHJcbn1cclxuXHJcbkBtaXhpbiBwaG9uZXMge1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHBob25lcykge1xyXG4gICAgICAgQGNvbnRlbnQ7ICAgICAgICAgXHJcbiAgICB9ICAgIFxyXG59IiwiLmFjY29yZGlvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5hY2NvcmRpb25fX2J0biB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogcmVtKDgwcHgpO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgcGFkZGluZy1ib3R0b206IHJlbSgzMHB4KTtcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3I6ICMwMDAsICRhbHBoYTogLjYpO1xyXG4gICAgfVxyXG5cclxuICAgICYgaDMge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZykgdHJhbnNsYXRlWCg1MCUpO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDQwcHgpO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIH1cclxufSIsIi5idG4ge1xyXG4gICAgcGFkZGluZzogcmVtKDEzcHgpIHJlbSgxNXB4KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDEzcHgpO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDFlbTtcclxuXHJcbiAgICAmX3RoZW1lX3JlZCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJ0bk9yYW5nZTtcclxuICAgIH1cclxuXHJcbiAgICAmX3RoZW1lX2Rhcmsge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkYXJrVGl0bGU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9tYXJnaW5lX3JpZ2h0IHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgyMHB4KTtcclxuICAgIH1cclxufSIsIi5jb250cm9sc19faW5wdXQge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICAmOmNoZWNrZWQge1xyXG4gICAgICAgICYgfiAuY29udHJvbHNfX2ljb246OmFmdGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uY29udHJvbHNfX2ljb24ge1xyXG4gICAgd2lkdGg6IHJlbSgxNXB4KTtcclxuICAgIGhlaWdodDogcmVtKDE1cHgpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgJl90eXBlX3JhZGlvIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcblxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIHdpZHRoOiA3cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogN3B4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidG5PcmFuZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfdHlwZV9jaGVjayB7XHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgd2lkdGg6IDlweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA3cHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi9pbWcvaWNvbnMvY2hlY2ttYXJrLnN2ZycpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uY29udHJvbHNfX3RpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDE0cHgpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjcxO1xyXG59IiwiLmRpZ25pdGllc19fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4uZGlnbml0aWVzX19pdGVtIHtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLyAzIC0gMnJlbSk7XHJcbn1cclxuXHJcbi5kaWduaXR5IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmRpZ25pdHlfX2ljb24ge1xyXG4gICAgd2lkdGg6IHJlbSg5N3B4KTtcclxuICAgIGhlaWdodDogcmVtKDg5cHgpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDMzcHgpO1xyXG59XHJcblxyXG4uZGlnbml0eV9faWNvbi1pbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgJl9maWxsX3JlZCB7XHJcbiAgICAgICAgZmlsbDogI0UzNTAyODtcclxuICAgIH1cclxuXHJcbiAgICAmX2ZpbGxfeWVsbG93IHtcclxuICAgICAgICBmaWxsOiAjRjlCNDNCO1xyXG4gICAgfVxyXG5cclxuICAgICZfZmlsbF9ncmVlbiB7XHJcbiAgICAgICAgZmlsbDogIzhCQzAzRjtcclxuICAgIH1cclxufVxyXG5cclxuLmRpZ25pdHlfX2NvbnRlbnQge1xyXG4gICAgJiBoNCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IExpZmVoYWNrLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDI0cHgpO1xyXG4gICAgICAgIGNvbG9yOiAkZGFya1RpdGxlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgyNXB4KTtcclxuICAgIH1cclxuXHJcbiAgICAmIHAge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0cHgpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgY29sb3I6IHJnYmEoNDcsIDUwLCA1MiwgMC44KTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS43MWVtO1xyXG4gICAgfVxyXG59IiwiLmZvcm0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4uZm9ybV9fY29sdW1uIHtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUvMiAtIDEwcHgpO1xyXG4gICAgbWF4LXdpZHRoOiByZW0oNDYwcHgpO1xyXG59XHJcblxyXG4uZm9ybV9fcm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oMTlweCk7XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfamNvbnRlbnRfZnN0YXJ0IHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5mb3JtX19sYWJlbCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAmX3dpZHRoX2hhbGYge1xyXG4gICAgICAgIHdpZHRoOiByZW0oMjIxcHgpO1xyXG4gICAgfVxyXG5cclxuICAgICZfd2lkdGhfcXVhcnRlciB7XHJcbiAgICAgICAgd2lkdGg6IHJlbSgxMDBweCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5mb3JtX19jb250cm9scyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMCByZW0oMTZweCkgNXB4IDA7XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5mb3JtX19idG4tY2xlYXIge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG5cclxufSIsIi5oZWFkZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5oZWFkZXJfX2xvZ28ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogcmVtKDkycHgpO1xyXG4gICAgaGVpZ2h0OiByZW0oNjlweCk7XHJcbn1cclxuXHJcbi5oZWFkZXJfX2xvZ28taW1nIHsgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIC0tdXAtY29sb3I6ICNFNTUwMjg7XHJcbiAgICAtLWRvd24tY29sb3I6ICNGOUI0M0I7XHJcbiAgICAtLWRvdC1jb2xvcjogIzhCQzMzNDtcclxufSIsIi5oZXJvX19jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgIG1hcmdpbi1ib3R0b206IHJlbSg2NXB4KTtcclxufVxyXG5cclxuLmhlcm9fX3ByZXZpZXcge1xyXG4gICAgd2lkdGg6IHJlbSg0NTFweCk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQ6IHVybCgnLi9pbWcvaWNvbnMvZHJvcHMuc3ZnJykgY2VudGVyIGNlbnRlciAvIGNvbnRhaW4gbm8tcmVwZWF0O1xyXG59XHJcblxyXG4uaGVyb19fYXJyb3ctc2Nyb2xsIHtcclxuICAgIHdpZHRoOiByZW0oMjlweCk7XHJcbiAgICBoZWlnaHQ6IHJlbSgxNXB4KTtcclxuICAgIGZpbGw6ICNmZWZlZmU7XHJcbn1cclxuXHJcbi5oZXJvX19hcnJvdy1zY3JvbGwtaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uaGVyb19fcHJldmlldy1pbWcge1xyXG4gICAgd2lkdGg6IHJlbSg0MTdweCk7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5oZXJvX190aXRsZSB7XHJcbiAgICB3aWR0aDogcmVtKDQyNXB4KTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LWZhbWlseTogR2FnYWxpbiwgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDcycHgpO1xyXG4gICAgY29sb3I6ICRvcmFuZ2U7XHJcbiAgICBsaW5lLWhlaWdodDogMC45MmVtO1xyXG5cclxuICAgICZfZm9udF9oYW5kd3JpdHRlbiB7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IExpZmVoYWNrLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDY1cHgpO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5oZXJvX19hcnJvdy1zY3JvbGwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogcmVtKDI5cHgpO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn0iLCIubGFiZWxfX3RpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDE0cHgpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxufVxyXG5cclxuLmxhYmVsX19pbnB1dCB7XHJcbiAgICBoZWlnaHQ6IHJlbSgzNnB4KTtcclxufVxyXG5cclxuLmxhYmVsX190ZXh0YXJlYSB7XHJcbiAgICBoZWlnaHQ6IHJlbSgxMTRweCk7XHJcbiAgICByZXNpemU6IG5vbmU7XHJcbn1cclxuXHJcbi5sYWJlbF9faW5wdXQsIC5sYWJlbF9fdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNzE7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXI6IHNvbGlkIDFweCAjZDFjZmNiO1xyXG4gICAgcGFkZGluZzogcmVtKDEycHgpIHJlbSgyMXB4KTtcclxuXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgIGJvcmRlcjogc29saWQgMnB4ICNmOWI0M2I7XHJcbiAgICB9XHJcbn1cclxuIiwiLm1lbnVfX2xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgO1xyXG59XHJcblxyXG4ubWVudV9faXRlbSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXNpemU6IHJlbSgxM3B4KTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgd2lkdGg6IDVweDtcclxuICAgICAgICBoZWlnaHQ6IDVweDtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLnBlb3BsZS1hYm91dF9fbGlzdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlOiByZXBlYXQoMiwgNTB2aCkgLyByZXBlYXQoNCwgMWZyKTtcclxufVxyXG5cclxuLnBlb3BsZS1hYm91dF9faXRlbSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgLnBlb3BsZS1hYm91dF9fY29udGVudCB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ucGVvcGxlLWFib3V0X19waG90byB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnBlb3BsZS1hYm91dF9fcGhvdG8taW1nIHtcclxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG5cclxuICAgICZfcG9zaXRpb25fcmlnaHQge1xyXG4gICAgICAgIG9iamVjdC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xyXG4gICAgfVxyXG59XHJcblxyXG4ucGVvcGxlLWFib3V0X19jb250ZW50IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwYWRkaW5nOiByZW0oMjBweCk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjVzIGVhc2U7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvcjogIzAwMCwgJGFscGhhOiAuNik7XHJcblxyXG4gICAgJiBkaXYge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0cHgpO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDMwcHgpO1xyXG4gICAgfVxyXG5cclxuICAgICYgcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTNweCk7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS43MWVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgxM3B4KTtcclxuICAgIH1cclxuXHJcbiAgICAmIC5idG4ge1xyXG4gICAgICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcbn0iLCIucGxheWVyX19jb250YWluZXIge1xyXG4gICAgd2lkdGg6IHJlbSg2NjBweCk7XHJcbiAgICBoZWlnaHQ6IHJlbSg0MDVweCk7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi9pbWcvc2hlZXQ3LndlYnAnKSBjZW50ZXIgY2VudGVyLyBjb3ZlciBuby1yZXBlYXQ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAtNTBweDtcclxuICAgICAgICB3aWR0aDogOSU7XHJcbiAgICAgICAgaGVpZ2h0OiAyNyU7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgICAgICBib3R0b206IDg1cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA3JTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxOCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAaW5jbHVkZSBwaG9uZXMge1xyXG4gICAgICAgICAgICBib3R0b206IC01MHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI0JTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi9pbWcvc2hlZXQ4LndlYnAnKSBjZW50ZXIgY2VudGVyLyBjb3ZlciBuby1yZXBlYXQ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHJpZ2h0OiAzNXB4O1xyXG4gICAgICAgIHRvcDogNDVweDtcclxuICAgICAgICB3aWR0aDogMTAlO1xyXG4gICAgICAgIGhlaWdodDogMTMlO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSB0YWJsZXRzIHtcclxuICAgICAgICAgICAgcmlnaHQ6IDVweDtcclxuICAgICAgICAgICAgdG9wOiA0NXB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSB0YWJsZXRzIHtcclxuICAgICAgICB3aWR0aDogNzcuNXZ3O1xyXG4gICAgICAgIGhlaWdodDogNTN2bWluO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLnBsYXllcl9fd3JhcHBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnBsYXllcl9fZWxlbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnBsYXllcl9fc3BsYXNoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuL2ltZy9wbGF5ZXJQcmV2aWV3LndlYnBcIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICYgLnBsYXllcl9fc3BsYXNoLXBsYXkge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnBsYXllcl9fc3BsYXNoLXBsYXkge1xyXG4gICAgd2lkdGg6IHJlbSg4MnB4KTtcclxuICAgIGhlaWdodDogcmVtKDExOHB4KTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIG9wYWNpdHk6IC45O1xyXG4gICAgZmlsbDogI2ZmZjtcclxuICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcclxuXHJcbiAgICBAaW5jbHVkZSB0YWJsZXRzIHtcclxuICAgICAgICB3aWR0aDogcmVtKDczcHgpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKDEwNnB4KTtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBwaG9uZXMge1xyXG4gICAgICAgIHdpZHRoOiByZW0oNDlweCk7XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oNzFweCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wbGF5ZXJfX2NvbnRyb2xzIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGhlaWdodDogcmVtKDM1cHgpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNlM2UzZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMCByZW0oMjVweCk7XHJcblxyXG4gICAgQGluY2x1ZGUgdGFibGV0cyB7XHJcbiAgICAgICAgcGFkZGluZzogMCByZW0oMjFweCk7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgcGhvbmVzIHtcclxuICAgICAgICBwYWRkaW5nOiAwIHJlbSgxMnB4KTtcclxuICAgIH1cclxufVxyXG5cclxuLnBsYXllcl9fc3RhcnQge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgd2lkdGg6IHJlbSgxNnB4KTtcclxuICAgIGhlaWdodDogcmVtKDIycHgpO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgIHdpZHRoOiByZW0oMTRweCk7XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oMjBweCk7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgcGhvbmVzIHtcclxuICAgICAgICB3aWR0aDogcmVtKDEwcHgpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKDEzcHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ucGxheWVyX19zdGFydC1wbGF5IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZmlsbDogIzYyNjI2MjtcclxufVxyXG5cclxuLnBsYXllcl9fcGxheWJhY2ssXHJcbi5wbGF5ZXJfX3ZvbHVtZSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzYyNjI2MjtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgcGhvbmVzIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuLnBsYXllcl9fcGxheWJhY2stYnV0dG9uLFxyXG4ucGxheWVyX192b2x1bWUtYnV0dG9uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzYyNjI2MjtcclxuICAgIHdpZHRoOiByZW0oMTNweCk7XHJcbiAgICBoZWlnaHQ6IHJlbSgxM3B4KTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgIHdpZHRoOiByZW0oMTFweCk7XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oMTFweCk7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgdGFibGV0cyB7XHJcbiAgICAgICAgd2lkdGg6IHJlbSg4cHgpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKDhweCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wbGF5ZXJfX3BsYXliYWNrIHtcclxuICAgIHdpZHRoOiByZW0oNDQ0cHgpO1xyXG5cclxuICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgIHdpZHRoOiA2Ni45JTtcclxuICAgIH1cclxufVxyXG5cclxuLnBsYXllcl9fcGxheWJhY2stYnV0dG9uIHtcclxuICAgIGxlZnQ6IDA7XHJcbn1cclxuXHJcbi5wbGF5ZXJfX3NwZWFrZXIge1xyXG4gICAgaGVpZ2h0OiByZW0oMjJweCk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgIGhlaWdodDogcmVtKDIwcHgpO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHBob25lcyB7XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oMTNweCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wbGF5ZXJfX3NwZWFrZXItYnRuIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG1hcmdpbi1yaWdodDogcmVtKDE5cHgpO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDE2cHgpO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHRhYmxldHMge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDExcHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ucGxheWVyX19zcGVha2VyLWltZyB7XHJcbiAgICB3aWR0aDogcmVtKDE4cHgpO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZmlsbDogIzYyNjI2MjtcclxufVxyXG5cclxuLnBsYXllcl9fdm9sdW1lIHtcclxuICAgIHdpZHRoOiByZW0oNThweCk7XHJcblxyXG4gICAgQGluY2x1ZGUgdGFibGV0cyB7XHJcbiAgICAgICAgd2lkdGg6IHJlbSg1M3B4KTtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBwaG9uZXMge1xyXG4gICAgICAgIHdpZHRoOiByZW0oMzZweCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wbGF5ZXJfX3ZvbHVtZS1idXR0b24ge1xyXG4gICAgbGVmdDogMTAwJTtcclxufVxyXG5cclxuLnBsYXllciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuXHJcbiAgICAmIGJ1dHRvbiB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi5wYXVzZWQge1xyXG4gICAgICAgIC5wbGF5ZXJfX3N0YXJ0IHtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG5cclxuICAgICAgICAgICAgJjo6YWZ0ZXIsXHJcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDM1JTtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICM2MjYyNjI7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBsYXllcl9fc3RhcnQtcGxheSB7XHJcbiAgICAgICAgICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLmFjdGl2ZSAucGxheWVyX19zcGxhc2gge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbn0iLCIuc2VjdGlvbiB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgcGFkZGluZzogcmVtKDExM3B4KSAwO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uc2VjdGlvbl9fdGl0bGUge1xyXG4gICAgZm9udC1mYW1pbHk6IEdhZ2FsaW4sIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IHJlbSg3MnB4KTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBjb2xvcjogJGRhcmtUaXRsZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IHJlbSg1NXB4KTtcclxuXHJcbiAgICAmX2NvbG9yX29yYW5nZSB7XHJcbiAgICAgICAgY29sb3I6ICNmOWI0M2I7XHJcbiAgICB9XHJcblxyXG4gICAgJl9jb2xvcl93aGl0ZSB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcblxyXG4gICAgJl90ZXh0LWFsaWduX2xlZnQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWN0aW9uX19oZXJvIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmc6IHJlbSgxM3B4KSAwIHJlbSg0MHB4KTtcclxuICAgIGJhY2tncm91bmQ6IHVybCgnLi9pbWcvaGVyb0JHLnBuZycpIHRvcCBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQ7XHJcblxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yOiAjMDAwLCAkYWxwaGE6IC4zMSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWN0aW9uX19hYm91dCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4vaW1nL2Fib3V0QkcuanBnJykgdG9wIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcclxufVxyXG5cclxuLnNlY3Rpb25fX3NsaWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZjliNDNiIDI0JSwgI2ViOGMzOCA0OCUsICNmOWI0M2IgNzQlKTtcclxuXHJcbiAgICAmIC5jb250YWluZXIge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuLnNlY3Rpb25fX3RlYW0ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJhY2tncm91bmQ6IHVybCgnLi9pbWcvdGVhbUJHLmpwZycpIHRvcCBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQ7XHJcblxyXG4gICAgJiAuY29udGFpbmVyIHtcclxuICAgICAgICB3aWR0aDogcmVtKDU0MnB4KTtcclxuICAgICAgICBwYWRkaW5nOiByZW0oOTdweCk7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3I6ICRkYXJrVGl0bGUsICRhbHBoYTogLjkzKTtcclxuICAgIH1cclxufVxyXG5cclxuLnNlY3Rpb25fX21lbnUge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCcuL2ltZy9hY2NvcmRpb25CRy5qcGcnKSB0b3AgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG5cclxuICAgICYgLmNvbnRhaW5lciB7XHJcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYztcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWN0aW9uX19wZW9wbGUtYWJvdXQge1xyXG4gICAgcGFkZGluZzogMDtcclxuXHJcbiAgICAmIC5jb250YWluZXIge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWN0aW9uX192aWRlbyB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4vaW1nL3ZpZGVvQkcuanBnJykgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcclxuXHJcbiAgICAmIC5zZWN0aW9uX190aXRsZSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDUwcHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VjdGlvbl9fZm9ybSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4vaW1nL2Zvcm1CRy5wbmcnKSBjZW50ZXIgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0LCB1cmwoJy4vaW1nL2Zvcm1NYXNrQkcuanBnJykgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcclxufSIsIi5zbGlkZXJfX2Fycm93IHtcclxuICAgIHdpZHRoOiByZW0oMjdweCk7XHJcbiAgICBoZWlnaHQ6IHJlbSgxNHB4KTtcclxuICAgIHotaW5kZXg6ICR6LWNvbnRyb2xBcnJvd3M7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBcclxuICAgICZfcHJldiB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xyXG4gICAgICAgIGxlZnQ6IHJlbSgtNDRweCk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9uZXh0IHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgIHJpZ2h0OiByZW0oLTQ0cHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2xpZGUge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5zbGlkZV9fa2NhbCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IHJlbSgtMjBweCk7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uc2xpZGVfX2tjYWwtaWNvbiB7XHJcbiAgICB3aWR0aDogcmVtKDYwcHgpO1xyXG4gICAgaGVpZ2h0OiByZW0oNjBweCk7XHJcbiAgICBvcGFjaXR5OiAuNTtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLnNsaWRlX19rY2FsLXZhbHVlIHtcclxuICAgIG9wYWNpdHk6IC41O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiByZW0oMjBweCk7XHJcbn1cclxuXHJcbi5zbGlkZV9fa2NhbC10ZXh0IHtcclxuICAgIG9wYWNpdHk6IC41O1xyXG4gICAgZm9udC1mYW1pbHk6IEdhZ2FsaW4sIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNHB4KTtcclxufVxyXG5cclxuLnNsaWRlX19waG90byB7XHJcbiAgICBtYXgtd2lkdGg6IHJlbSg1MDBweCk7XHJcbiAgICBmbGV4LXNocmluazogMDtcclxufVxyXG5cclxuLnNsaWRlX19jb250ZW50IHtcclxuICAgIG1heC13aWR0aDogcmVtKDQ3MHB4KTtcclxuXHJcbiAgICAmIGgyIHtcclxuICAgICAgICB3aWR0aDogcmVtKDQ1MHB4KTtcclxuICAgICAgICBmb250LWZhbWlseTogR2FnYWxpbiwgc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXNpemU6IHJlbSg3MnB4KTtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oNTZweCk7XHJcbiAgICB9XHJcblxyXG4gICAgJiBwIHtcclxuICAgICAgICB3aWR0aDogcmVtKDQ1MHB4KTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS43MWVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDMwcHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2xpZGVfX29yZGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgJiBkaXYge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBHYWdhbGluLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDcycHgpO1xyXG4gICAgICAgIGNvbG9yOiAkYnRuT3JhbmdlO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDI5cHgpO1xyXG4gICAgfVxyXG5cclxuICAgICYgc3BhbiB7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgzMHB4KTtcclxuICAgIH1cclxuXHJcbiAgICAmIC5idG4ge1xyXG4gICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgfVxyXG59IiwiLnNsaWRlX19zdHJ1Y3Qge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiByZW0oLTMwcHgpO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5zdHJ1Y3RfX2J0biB7XHJcbiAgICB3aWR0aDogcmVtKDkwcHgpO1xyXG4gICAgaGVpZ2h0OiByZW0oOTBweCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvcjogI2UzNTAyOCwgJGFscGhhOiAuNCk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjNzIGVhc2U7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlMzUwMjg7XHJcblxyXG4gICAgICAgICYgfiAuc3RydWN0X19saXN0IHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgbGVmdDogcmVtKDkwcHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnN0cnVjdF9fbGlzdCB7XHJcbiAgICB3aWR0aDogcmVtKDI3MHB4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yOiAjZmZmLCAkYWxwaGE6IC45KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IHJlbSgxOHB4KSByZW0oMjJweCk7XHJcbiAgICBjb2xvcjogJGRhcmtUaXRsZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IC05OTk5OTlweDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyBlYXNlO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgbGVmdDogcmVtKDkwcHgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc3RydWN0X19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDE4cHgpO1xyXG5cclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxufVxyXG5cclxuLnN0cnVjdF9faWNvbiB7XHJcbiAgICB3aWR0aDogcmVtKDQ1cHgpO1xyXG4gICAgbWF4LWhlaWdodDogcmVtKDQ1cHgpO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiByZW0oMjVweCk7XHJcbn1cclxuXHJcbi5zdHJ1Y3RfX3RleHQge1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5zdHJ1Y3RfX3dlaWdodCB7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG59IiwiLnRlYW1fX2l0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDQwcHgpO1xyXG5cclxuICAgICZfYWN0aXZlIHtcclxuICAgICAgICAmIC50ZWFtbWF0ZV9fbmFtZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xyXG5cclxuICAgICAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDdweCBzb2xpZCAkb3JhbmdlO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiAudGVhbW1hdGVfX3dyYXBwZXIge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4udGVhbW1hdGVfX25hbWUge1xyXG4gICAgZm9udC1mYW1pbHk6IEdhZ2FsaW4sIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNHB4KTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG5cclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci10b3A6IDdweCBzb2xpZCAkb3JhbmdlO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDA7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4udGVhbW1hdGVfX3dyYXBwZXIge1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLnRlYW1tYXRlX19hYm91dCB7XHJcbiAgICBwYWRkaW5nOiByZW0oMThweCkgMCAwIHJlbSgyMHB4KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4udGVhbW1hdGVfX3Bob3RvIHtcclxuICAgIHdpZHRoOiByZW0oMTAwcHgpO1xyXG4gICAgaGVpZ2h0OiByZW0oMTAwcHgpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiByZW0oMjBweCk7XHJcbn1cclxuXHJcbi50ZWFtbWF0ZV9fcGhvdG8taW1nIHtcclxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG59XHJcblxyXG4udGVhbW1hdGVfX2Rlc2Mge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNzE7XHJcblxyXG4gICAgJiBkaXYge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDE1cHgpO1xyXG4gICAgfVxyXG5cclxuICAgICYgcCB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIH1cclxufSJdfQ== */
